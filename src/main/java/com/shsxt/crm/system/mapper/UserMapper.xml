<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shsxt.crm.system.dao.UserMapper">
    <resultMap id="BaseResultMap" type="com.shsxt.crm.system.pojo.User">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Wed Aug 21 10:32:19 CST 2019.
        -->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="user_pwd" jdbcType="VARCHAR" property="userPwd"/>
        <result column="true_name" jdbcType="VARCHAR" property="trueName"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="is_valid" jdbcType="INTEGER" property="isValid"/>
        <result column="create_date" jdbcType="TIMESTAMP" property="createDate"/>
        <result column="update_date" jdbcType="TIMESTAMP" property="updateDate"/>
    </resultMap>

    <resultMap id="BaseUserRoleResultMap" type="UserDto" extends="BaseResultMap">
        <result column="role_name" jdbcType="TIMESTAMP" property="roleName"/>
    </resultMap>

    <sql id="Base_Column_List">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Wed Aug 21 10:32:19 CST 2019.
        -->
        id, user_name, user_pwd, true_name, email, phone, is_valid, create_date, update_date
    </sql>
    <!-- 重构根据主键查询方法，用于首页显示角色信息 -->
    <select id="selectById" parameterType="java.lang.Integer" resultMap="BaseUserRoleResultMap">
        SELECT
            u.id id,
            u.user_name userName,
            u.true_name trueName,
            u.user_pwd userPwd,
            u.email email,
            u.phone phone,
            u.create_date createDate,
            u.update_date updateDate,
            GROUP_CONCAT(r.id) roleIdsStr,
            GROUP_CONCAT(r.role_name) roleName
        FROM
            t_user u
        LEFT JOIN t_user_role ur ON ur.user_id = u.id
        LEFT JOIN t_role r ON ur.role_id = r.id
        WHERE u.id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="delete" parameterType="java.lang.Integer">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Wed Aug 21 10:32:19 CST 2019.
        -->
        delete from t_user
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="save" parameterType="com.shsxt.crm.system.pojo.User">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Wed Aug 21 10:32:19 CST 2019.
        -->
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into t_user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userName != null">
                user_name,
            </if>
            <if test="userPwd != null">
                user_pwd,
            </if>
            <if test="trueName != null">
                true_name,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="isValid != null">
                is_valid,
            </if>
            <if test="createDate != null">
                create_date,
            </if>
            <if test="updateDate != null">
                update_date,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userName != null">
                #{userName,jdbcType=VARCHAR},
            </if>
            <if test="userPwd != null">
                #{userPwd,jdbcType=VARCHAR},
            </if>
            <if test="trueName != null">
                #{trueName,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="isValid != null">
                #{isValid,jdbcType=INTEGER},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateDate != null">
                #{updateDate,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="update" parameterType="com.shsxt.crm.system.pojo.User">
        <!--
          WARNING - @mbg.generated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Wed Aug 21 10:32:19 CST 2019.
        -->
        update t_user
        <set>
            <if test="userName != null">
                user_name = #{userName,jdbcType=VARCHAR},
            </if>
            <if test="userPwd != null">
                user_pwd = #{userPwd,jdbcType=VARCHAR},
            </if>
            <if test="trueName != null">
                true_name = #{trueName,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="isValid != null">
                is_valid = #{isValid,jdbcType=INTEGER},
            </if>
            <if test="createDate != null">
                create_date = #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateDate != null">
                update_date = #{updateDate,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>

    <!-- 根据用户名查找用户 -->
    <select id="selectUserByUserName" parameterType="string" resultMap="BaseResultMap">
        SELECT
            id id,
            user_name userName,
            true_name trueName,
            user_pwd userPwd
        FROM
            t_user
        WHERE is_valid = 1
        AND user_name = #{userName}
    </select>

    <!-- 查询客户经理人 -->
    <select id="selectCustomerList" resultType="map">
        SELECT
            u.id id,
            u.true_name trueName
        FROM
            t_user u
        LEFT JOIN t_user_role ur ON ur.user_id = u.id
        LEFT JOIN t_role r ON ur.role_id = r.id
        WHERE
            u.is_valid = 1
        AND r.role_name = '客户经理';
    </select>

    <!-- 查询用户 -->
    <select id="selectByParams" parameterType="UserQuery" resultMap="BaseUserRoleResultMap">
        SELECT
        u.id id,
        u.user_name userName,
        u.true_name trueName,
        u.email email,
        u.phone phone,
        u.create_date createDate,
        u.update_date updateDate,
        GROUP_CONCAT(r.id) roleIdsStr,
        GROUP_CONCAT(r.role_name) roleName
        FROM
        t_user u
        LEFT JOIN t_user_role ur ON ur.user_id = u.id
        LEFT JOIN t_role r ON ur.role_id = r.id
        <where>
            u.is_valid = 1
            <if test="null != userName and '' != userName">
                AND u.user_name LIKE concat('%', #{userName}, '%')
            </if>
            <if test="null != email and '' != email">
                AND u.email LIKE concat('%', #{email}, '%')
            </if>
            <if test="null != phone and '' != phone">
                AND u.phone LIKE concat('%', #{phone}, '%')
            </if>
        </where>
        GROUP BY
        u.id
    </select>

    <!-- 逻辑删除用户 -->
    <update id="deleteBatch">
        UPDATE t_user
        SET is_valid = 0
        WHERE id IN
        <foreach collection="array" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </update>

    <!-- 根据用户id查询权限信息 -->
    <select id="selectPermissionByUserId" parameterType="int" resultType="string">
        SELECT
            DISTINCT m.opt_value optValue
        FROM
            t_module m
        LEFT JOIN t_permission p ON p.module_id = m.id
        LEFT JOIN t_role r ON p.role_id = r.id
        LEFT JOIN t_user_role ur ON ur.role_id = r.id
        LEFT JOIN t_user u ON ur.user_id = u.id
        WHERE
            u.is_valid = 1
        AND u.id = #{userId}
    </select>
</mapper>